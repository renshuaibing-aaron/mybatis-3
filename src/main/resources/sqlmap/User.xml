<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="com.mayikt.mapper.UserMapper"就是com.mayikt.mapper(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.aaron.ren.normal.common.UserMapper">
  <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
  使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
  resultType="com.mayikt.entity.User"就表示将查询结果封装成一个User类的对象返回
  User类就是users表所对应的实体类
  -->
  <!--
      根据id查询得到一个user对象
   -->

  <resultMap id="BaseResultMap" type="com.aaron.ren.normal.common.UserEntity">
    <id column="id" jdbcType="DECIMAL" property="id"/>
    <result column="name" jdbcType="DECIMAL" property="name"/>
  </resultMap>

  <select id="getUser" parameterType="int" resultType="com.aaron.ren.normal.common.UserEntity" useCache="true"
          flushCache="false">
        select * from user where id=#{id,javaType=Integer,jdbcType=NUMERIC}
    </select>


  <select id="getAllUser" resultMap="BaseResultMap">
        select * from user
    </select>


  <select id="getUserDynamic" parameterType="com.aaron.ren.normal.common.UserEntity" resultMap="BaseResultMap">
    select * from user
    <where>
      <if test="id != null and id !=''">
        and id =#{id}
      </if>
      <if test="name != null and name !=''">
        and name =#{name}
      </if>
    </where>
  </select>


  <insert id="addUser" useGeneratedKeys="true" keyProperty="id" parameterType="com.aaron.ren.normal.common.UserEntity">
    insert into user ( name )
       value (#{name})
    </insert>


  <!--这里是oracle的主键生成方式注意和mysql区别-->
  <insert id="addUserOracle" parameterType="com.aaron.ren.normal.common.UserEntity">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select SEQ_PRIMARY.nextval as id from DUAL /*这里是使用oracle的序列进行主键的自增操作*/
    </selectKey>
    insert into user ( name )
    value (#{name})
  </insert>


  <insert id="addUserForeach" parameterType="com.aaron.ren.normal.common.UserEntity">
    insert into user ( name )
    select A.* from(
    <foreach collection="list" item="item" index="index" separator="union all">
      select
      #{item.name}
      from dual
    </foreach>
    ) A
  </insert>


  <!-- 开启本mapper所在namespace的二级缓存 -->
  <cache></cache>
</mapper>
